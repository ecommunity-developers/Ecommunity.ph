// Automatic FlutterFlow imports
import '/backend/backend.dart';
import '/backend/schema/structs/index.dart';
import '/flutter_flow/flutter_flow_theme.dart';
import '/flutter_flow/flutter_flow_util.dart';
import 'index.dart'; // Imports other custom actions
import '/flutter_flow/custom_functions.dart'; // Imports custom functions
import 'package:flutter/material.dart';
// Begin custom action code
// DO NOT REMOVE OR MODIFY THE CODE ABOVE!

// import 'dart:io';
// import 'dart:math';

// import 'package:flutter/services.dart' show rootBundle;
// import 'package:intl/intl.dart';
// import 'package:pdf/pdf.dart';
// import 'package:pdf/widgets.dart' as pw;

Future<void> generatePDF(
  String headerImagePath,
  String businessTradeName,
  String businessAddress,
  String contactNumber,
  String emailAddress,
  String generatedBy,
) async {
//   // Create a new PDF document

//   // Generate a random reference number
//   String generateReferenceNumber() {
//     final random = Random();
//     return 'REF-${random.nextInt(10000)}';
}

//   final pdf = pw.Document();

//   // Add header image
//   final image = pw.MemoryImage(File(headerImagePath).readAsBytesSync());
//   final header = pw.Container(
//     child: pw.Image(image),
//     height: PdfPageFormat.cm * 2, // Adjust height as needed
//   );

//   // Define the footer
//   pw.Widget buildFooter(pw.Context context) {
//     return pw.Container(
//       alignment: pw.Alignment.centerLeft,
//       margin: pw.EdgeInsets.only(top: 20),
//       child: pw.Row(
//         mainAxisAlignment: pw.MainAxisAlignment.spaceBetween,
//         children: [
//           pw.Column(
//             crossAxisAlignment: pw.CrossAxisAlignment.start,
//             children: [
//               pw.Text(
//                 'Report Generated by: $generatedBy',
//                 style: pw.TextStyle(fontSize: 10),
//               ),
//               pw.Text(
//                 'Date & Time: ${DateFormat.yMMMd().format(DateTime.now())}',
//                 style: pw.TextStyle(fontSize: 10),
//               ),
//             ],
//           ),
//           pw.Text(
//             'Page ${context.pageNumber}',
//             style: pw.TextStyle(fontSize: 10),
//           ),
//         ],
//       ),
//     );
//   }

//   // Add content to the PDF
//   pdf.addPage(
//     pw.Page(
//       build: (pw.Context context) {
//         return pw.Column(
//           crossAxisAlignment: pw.CrossAxisAlignment.start,
//           children: [
//             // Header
//             header,
//             pw.SizedBox(height: 20),
//             // Report Reference Number
//             pw.Text(
//               'Report Reference Number: ${generateReferenceNumber()}',
//               style: pw.TextStyle(
//                 fontSize: 11,
//                 decoration: pw.TextDecoration.underline,
//               ),
//             ),
//             pw.SizedBox(height: 20),
//             // Table
//             pw.Table.fromTextArray(
//               context: context,
//               headerDecoration: pw.BoxDecoration(color: PdfColors.grey200),
//               data: <List<String>>[
//                 <String>['Business Trade Name:', businessTradeName],
//                 <String>['Business Address:', businessAddress],
//                 <String>[
//                   'Contact Number:',
//                   contactNumber,
//                   'Email Address:',
//                   emailAddress
//                 ],
//               ],
//             ),
//             // Add custom footer
//             buildFooter(context),
//           ],
//         );
//       },
//     ),
//   );

//   // Save the PDF to a file
//   final file = File('example.pdf');
//   await file.writeAsBytes(await pdf.save());
// }

// // Generate a random reference number
// String generateReferenceNumber() {
//   final random = Random();
//   return 'REF-${random.nextInt(10000)}';
// }

// Set your action name, define your arguments and return parameter,
// and then add the boilerplate code using the green button on the right!
